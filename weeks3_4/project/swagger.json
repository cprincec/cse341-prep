{
  "swagger": "2.0",
  "info": {
    "title": "Contacts Api",
    "description": "An API for shopping from various supermerkets. You can GET available supermarkets, GET all products, categories, single product in supermarket of choice. You, can also POST (create) an account (even with google, if you like), PUT (update) account details, DELETE account, Login in, logout and many more to come.",
    "version": "1.0.0"
  },
  "host": "centeralmall.onrender.com",
  "basePath": "/",
  "schemes": ["https"],
  "tags": [
    {
      "name": "Users",
      "description": "Methods to GET, POST, PUT, and DELETE users."
    },
    {
      "name": "Shops",
      "description": "Methods to GET shops, products, single product, available categories in a shop."
    },
    {
      "name": "Authentication",
      "description": "Methods to Login and logout."
    },
    {
      "name": "Documentation",
      "description": "Methods to GET the Swagger UI documentation."
    } 
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "description": "Login with username and password to access proteced endpoints",
        "summary": "Login to access protected routes",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User email and password",

            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "description": "Logout the logged in user. User will be redirected to the shops route. This will prevent access to protected routes",
        "tags": ["Authentication"],
        "summary": "Logout. This will restrict access protected routes and redirect to shops endpoint.",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Server error"
            }
        }
      }
    },
    "/shops/": {
      "get": {
        "tags": ["Shops"],
        "summary": "GET all available shops.",
        "produces": ["application/json"],
        "description": "See all the shops you can shop from.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/shops/{shopId}/products": {
      "get": {
        "tags": ["Shops"],
        "summary": "GET all available products in a shop.",
        "description": "Get all products in the selected shop of your choice",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of the shop whose products to be fetched"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/shops/{shopId}/categories": {
      "get": {
        "tags": ["Shops"],
        "summary": "GET all available products categories in a shop.",
        "description": "Get list of product categories available in a shop",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/shops/{shopId}/products/{productId}": {
      "get": {
        "tags": ["Shops"],
        "summary": "GET information of a product in a shop.",
        "description": "Get details of a specific product in a shop",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of the shop"
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of the product"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": ["Users"],
        "summary": "GET all registered users",
        "description": "See all registered users. (THIS IS A PROTECTED ROUTE)",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Sign up/Create an account",
        "description": "Create a user account",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "phoneNumber": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": { "tags": ["Users"],
      "summary": "GET logged in user information.",
      "description": "See details of logged in user. (THIS IS A PROTECTED ROUTE)",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
      "tags": ["Users"],
      "summary": "Update logged in user information.",
      "description": "Update logged in user details (PROTECTED ROUTE)",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "phoneNumber": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
      "tags": ["Users"],
      "summary": "DELETE logged in user information.",
        "description": "Delete a logged in user account (PROTECTED ROUTE)",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api-docs/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    }
  }
}







